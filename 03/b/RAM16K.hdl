// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/b/RAM16K.hdl

/**
 * Memory of 16K registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM16K {
    IN in[16], load, address[14];
    OUT out[16];

    PARTS:
    // Put your code here:
    DMux4Way(in=load, sel=address[0..1], a=first4k, b=second4k, c=third4k, d=fourth4k);
    RAM4K(in=in, load=first4k, address=address[2..13], out=firstRam4k);
    RAM4K(in=in, load=second4k, address=address[2..13], out=secondRam4k);
    RAM4K(in=in, load=third4k, address=address[2..13], out=thirdRam4k);
    RAM4K(in=in, load=fourth4k, address=address[2..13], out=fourthRam4k);
    Mux4Way16(a=firstRam4k, b=secondRam4k, c=thirdRam4k, d=fourthRam4k, sel=address[0..1], out=out);
}