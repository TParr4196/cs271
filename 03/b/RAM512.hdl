// This file is part of the materials accompanying the book 
// "The Elements of Computing Systems" by Nisan and Schocken, 
// MIT Press. Book site: www.idc.ac.il/tecs
// File name: projects/03/b/RAM512.hdl

/**
 * Memory of 512 registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM512 {
    IN in[16], load, address[9];
    OUT out[16];

    PARTS:
    // Put your code here:
    DMux8Way(in=load, sel=address[0..2], a=first64, b=second64, c=third64, d=fourth64, e=fifth64, f=sixth64, g=seventh64, h=eighth64);
    RAM64(in=in, load=first64, address=address[3..8], out=firstRam64);
    RAM64(in=in, load=second64, address=address[3..8], out=secondRam64);
    RAM64(in=in, load=third64, address=address[3..8], out=thirdRam64);
    RAM64(in=in, load=fourth64, address=address[3..8], out=fourthRam64);
    RAM64(in=in, load=fifth64, address=address[3..8], out=fifthRam64);
    RAM64(in=in, load=sixth64, address=address[3..8], out=sixthRam64);
    RAM64(in=in, load=seventh64, address=address[3..8], out=seventhRam64);
    RAM64(in=in, load=eighth64, address=address[3..8], out=eighthRam64);
    Mux8Way16(a=firstRam64, b=secondRam64, c=thirdRam64, d=fourthRam64, e=fifthRam64, f=sixthRam64, g=seventhRam64, h=eighthRam64, sel=address[0..2], out=out);
}